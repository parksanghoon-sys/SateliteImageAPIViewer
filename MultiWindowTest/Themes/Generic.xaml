<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:con ="clr-namespace:MultiWindowTest.Converters"
                    xmlns:ct ="clr-namespace:MultiWindowTest.Views">
    <con:EnumToVisibilityConverter x:Key="EnumToVisConverter"/>
    <BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>

    <Style TargetType="{x:Type ct:MessagePopUpBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ct:MessagePopUpBox}">
                    <Popup x:Name="xMsgPupUp"
                           Visibility="{Binding Path=IsOpen, RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource BoolToVisConverter}}"
                           Placement="Center"
                           PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                           AllowsTransparency="True">
                        <Popup.Style>
                            <Style TargetType="Popup">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsOpen, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                                        <Setter Property="IsOpen" Value="False"/>
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=IsOpen, RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsOpen" Value="True"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Popup.Style>
                        <Grid x:Name="xMsgGrid"
                              Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}"
                              Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch">
                            <Grid Background="#FF000000"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Opacity="0.5">
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsOpen, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsOpen, RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                                                    <Condition Binding="{Binding Path=IsBackgroundDisable, RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                            </Grid>
                            <Border RenderTransformOrigin="0.5 0.5">
                                <!--#region NewRegion -->
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>

                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1" />
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1" />
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                                
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <!--#endregion-->
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="xBorderScale" ScaleX="0" ScaleY="0"/>
                                </Border.RenderTransform>
                                <Grid VerticalAlignment="{Binding Path=VAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                      HorizontalAlignment="{Binding Path=HAlignment, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Border Grid.RowSpan="2"
                                            Background="#FFFFFFFF"/>
                                    <ContentPresenter Grid.Row="0"
                                                      Margin="0 50 0 40"/>
                                    <StackPanel x:Name="xYesNoMessageBox"
                                                Grid.Row="1"
                                                Orientation="Horizontal"
                                                HorizontalAlignment="Center"
                                                Visibility="{Binding Path=MessagePopUpBoxType ,RelativeSource={RelativeSource TemplatedParent}}"
                                                Margin="50 0 50 30">
                                        <Button x:Name="xYesBtn"
                                                Width="160"
                                                Height="50"
                                                HorizontalAlignment="Center"
                                                Background="#FF222222"
                                                FontSize="26"
                                                FontWeight="Bold"
                                                Command="{Binding OKCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                CommandParameter="{Binding OKCommandParameter, RelativeSource={RelativeSource TemplatedParent}}"
                                                Margin="0, 0, 10, 0">
                                            <TextBlock Text="Yes"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"/>
                                        </Button>
                                        <Button x:Name="xNoBtn"
                                                Width="160"
                                                Height="50"
                                                HorizontalAlignment="Center"
                                                Background="#FFBC2230"
                                                Foreground="#FFFFFFFF"
                                                FontSize="26"
                                                FontWeight="Bold"
                                                Command="{Binding CancelCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                CommandParameter="{Binding CancelCommandParameter, RelativeSource={RelativeSource TemplatedParent}}"
                                                Margin="0, 0, 0, 0">
                                            <TextBlock Text="No"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center" />
                                        </Button>
                                    </StackPanel>
                                    <StackPanel x:Name="xConfirmDeleteMessageBox"
                                                Grid.Row="1"
                                                Orientation="Horizontal"
                                                HorizontalAlignment="Center"
                                                Visibility="{Binding Path=MessagePopUpBoxType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EnumToVisConverter}, ConverterParameter=ConfirmDelete}"
                                                Margin="50, 0, 50, 30">
                                        <Button x:Name="xCancelBtn"
                                                Width="160"
                                                Height="50"
                                                HorizontalAlignment="Center"
                                                Background="#FF222222"
                                                Foreground="#FFFFFFFF"
                                                FontSize="26"
                                                FontWeight="Bold"
                                                Command="{Binding CancelCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                CommandParameter="{Binding CancelCommandParameter, RelativeSource={RelativeSource TemplatedParent}}"
                                                Margin="0, 0, 10, 0"
                                                >
                                            <TextBlock Text="취소"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center" />
                                        </Button>
                                        <Button x:Name="xDeleteBtn"
                                                Width="160"
                                                Height="50"
                                                HorizontalAlignment="Center"
                                                Background="#FFBC2230"
                                                Foreground="#FFFFFFFF"
                                                FontSize="26"
                                                FontWeight="Bold"
                                                Command="{Binding DeleteCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                CommandParameter="{Binding DeleteCommandParameter, RelativeSource={RelativeSource TemplatedParent}}"
                                                Margin="0, 0, 0, 0"
                                                >
                                            <TextBlock Text="삭제"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center" />
                                        </Button>
                                    </StackPanel>

                                    <StackPanel x:Name="xOKMessageBox"
                                                Grid.Row="1"
                                                Orientation="Horizontal"
                                                HorizontalAlignment="Center"
                                                Visibility="{Binding Path=MessagePopUpBoxType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EnumToVisConverter}, ConverterParameter=OK}"
                                                Margin="50, 0, 50, 30">
                                        <Button x:Name="xOKBtn"
                                                Width="240"
                                                Height="80"
                                                HorizontalAlignment="Center"
                                                Background="#FFBC2230"
                                                Foreground="#FFFFFFFF"
                                                FontSize="30"
                                                FontWeight="Bold"
                                                Command="{Binding OKCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                CommandParameter="{Binding OKCommandParameter, RelativeSource={RelativeSource TemplatedParent}}"
                                                Margin="0, 0, 10, 0"
                                                >
                                            <TextBlock Text="확인"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center" />
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </Grid>
                    </Popup>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>